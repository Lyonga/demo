##############


from datetime import datetime, timedelta

# For "last month" range:
today = datetime.now()
first_of_this_month = today.replace(day=1)
last_month_end = first_of_this_month
last_month_start = (first_of_this_month - timedelta(days=1)).replace(day=1)

MONTHLY_START_DATE = last_month_start.strftime('%Y-%m-%d')
MONTHLY_END_DATE = last_month_end.strftime('%Y-%m-%d')

# Then use them:
TimePeriod={
    'Start': MONTHLY_START_DATE,
    'End':   MONTHLY_END_DATE
},
Granularity='MONTHLY',



###################





response = cost_explorer.get_cost_and_usage(
    TimePeriod={
        'Start': MONTHLY_START_DATE,
        'End':   MONTHLY_END_DATE
    },
    Granularity='MONTHLY',
    Metrics=['UnblendedCost'],
    Filter={
        'Tags': {
            'Key': 'Team',
            'Values': ['TeamA', 'TeamB'],
            'MatchOptions': ['EQUALS']
        }
    },
    GroupBy=[
        { 'Type': 'DIMENSION', 'Key': 'SERVICE' },
        # or 'LINKED_ACCOUNT', etc., depending on how you want to group
    ],
)



####

MONTHLY_START_DATE = last_month_start
MONTHLY_END_DATE   = last_month_end

response = cost_explorer.get_cost_and_usage(
    TimePeriod={
        'Start': MONTHLY_START_DATE,
        'End':   MONTHLY_END_DATE
    },
    Granularity='MONTHLY',
    Metrics=['UnblendedCost'],
    Filter={
        'Tags': {
            'Key': 'Team',
            'Values': ['TeamA']
        }
    },
    GroupBy=[
        {'Type': 'DIMENSION', 'Key': 'LINKED_ACCOUNT'},
        {'Type': 'DIMENSION', 'Key': 'SERVICE'},
    ]
)

# Then parse response['ResultsByTime'][0]['Groups'] for cost data
# Because Granularity=MONTHLY => only one 'ResultsByTime' element



#####

{
  'ResultsByTime': [
    {
      'TimePeriod': {'Start': '2024-12-01', 'End': '2025-01-01'},
      'Groups': [
        {
          'Keys': ['123456789012', 'Amazon EC2'],
          'Metrics': {
            'UnblendedCost': {'Amount': '10.00', 'Unit': 'USD'}
          }
        },
        {
          'Keys': ['123456789012', 'Amazon S3'],
          'Metrics': {
            'UnblendedCost': {'Amount': '2.50', 'Unit': 'USD'}
          }
        },
        ...
      ]
    }
  ]
}


