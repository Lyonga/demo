Parameters:
  LatestWindowsAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base'


Resources:
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref MyLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - subnet-12345678
        - subnet-87654321
      Tags:
        - Key: SSMAssociation
          Value: DomainJoin
          PropagateAtLaunch: true
Resources:
  DomainJoinAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref MySSMDocument
      Targets:
        - Key: tag:SSMAssociation
          Values:
            - DomainJoin
      Parameters:
        directoryId:
          - !Ref ADDirectoryId
        directoryName:
          - !Ref ADDirectoryName
        dnsIpAddresses:
          - !Ref ADDnsIpAddress1
          - !Ref ADDnsIpAddress2
      ScheduleExpression: "rate(5 minutes)" # Adjust as needed


Resources:
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: ami-0abcdef1234567890
        InstanceType: t2.micro
        IamInstanceProfile:
          Name: !Ref MyInstanceProfile
        SecurityGroupIds:
          - !Ref MySecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: SSMAssociation
                Value: DomainJoin

AWSTemplateFormatVersion: '2010-09-09'
Description: Launch EC2 from Launch Template and Attach Domain via Custom SSM Association

Parameters:
  MySSMDocumentName:
    Type: String
    Default: JoinDomainDocument
    Description: The name of the custom SSM Document for domain joining.

  ADDirectoryId:
    Type: String
    Description: The ID of the AWS Directory Service directory.

  ADDirectoryName:
    Type: String
    Description: The name of the directory (e.g., test.example.com).

  ADDnsIpAddress1:
    Type: String
    Description: Primary DNS IP Address.

  ADDnsIpAddress2:
    Type: String
    Description: Secondary DNS IP Address.

  AMIId:
    Type: AWS::EC2::Image::Id
    Description: The AMI ID for the EC2 instance.

  InstanceType:
    Type: String
    Default: t3.micro
    Description: EC2 instance type.

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for the EC2 instance.

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key Pair for SSH access.

Resources:
  # IAM Role for EC2 with SSM Permissions
  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2SSMRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2RoleforSSM

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: EC2InstanceProfile
      Roles:
        - Ref: EC2SSMRole

  # Custom SSM Document for Domain Joining
  JoinDomainSSMDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Automation
      Name: !Ref MySSMDocumentName
      Content:
        schemaVersion: "1.2"
        description: Join instances to an AWS Directory Service domain.
        parameters:
          directoryId:
            type: String
            description: (Required) The ID of the AWS Directory Service directory.
          directoryName:
            type: String
            description: (Required) The name of the directory; for example, test.example.com
          dnsIpAddresses:
            type: StringList
            default: []
            description: (Optional) The IP addresses of the DNS servers in the directory. Required when DHCP is not configured. Learn more at http://docs.aws.amazon.com/directoryservice/latest/simple-ad/join_get_dns_addresses.html
            allowedPattern: ((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
        runtimeConfig:
          aws:domainJoin:
            properties:
              directoryId: '{{ directoryId }}'
              directoryName: '{{ directoryName }}'
              dnsIpAddresses: '{{ dnsIpAddresses }}'

  # Launch Template Definition
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: !Ref AMIId
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Name: !Ref EC2InstanceProfile
        SecurityGroupIds:
          - !Ref SecurityGroupId
        KeyName: !Ref KeyPairName
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: MyDomainJoinedInstance

  # EC2 Instance Launched from Launch Template
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          # Create directory for the CloudWatch agent MSI
          New-Item -ItemType Directory -Path C:\Downloads\Amazon\AmazonCloudWatchAgent -Force | Out-Null
      
          # Download the CloudWatch Agent MSI
          (New-Object Net.WebClient).DownloadFile(
            "https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/amazon-cloudwatch-agent.msi",
            "C:\Downloads\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi"
          )
      
          # Install the CloudWatch Agent using msiexec
          msiexec.exe /i "C:\Downloads\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.msi" /quiet /norestart
      
          # Run cfn-init to process any CloudFormation metadata configurations
          cfn-init.exe -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
      
          # Signal to CloudFormation that the instance config is done
          cfn-signal.exe -e $LASTEXITCODE --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          </powershell>

      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: MyDomainJoinedInstance

  # SSM Association to Apply the Domain Join Document
  SSMDomainJoinAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref MySSMDocumentName
      InstanceId: !Ref MyEC2Instance
      Parameters:
        directoryId:
          - !Ref ADDirectoryId
        directoryName:
          - !Ref ADDirectoryName
        dnsIpAddresses:
          - !Ref ADDnsIpAddress1
          - !Ref ADDnsIpAddress2
      AssociationName: DomainJoinAssociation
      AutomationTargetParameterName: InstanceId
      MaxConcurrency: "1"
      MaxErrors: "0"
      ComplianceSeverity: CRITICAL
    DependsOn:
      - JoinDomainSSMDocument
      - MyEC2Instance

Outputs:
  EC2InstanceId:
    Description: The Instance ID of the EC2 instance
    Value: !Ref MyEC2Instance
  SSMDocumentName:
    Description: The name of the SSM Document used for domain joining
    Value: !Ref MySSMDocumentName

